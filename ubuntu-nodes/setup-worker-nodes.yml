- hosts: "{{ varhosts | default('amber') }}"
  become: yes
  become_user: root
  tasks:
    - name: Install aptitude using apt
      apt:
        name: aptitude
        state: present
        update_cache: yes
        force_apt_get: yes
    - name: Install required system packages
      apt:
        name: '{{ item }}'
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - openjdk-8-jdk
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - ethtool
    - name: Add Docker GPG apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: Update apt and install docker-ce
      apt:
        update_cache: yes
        name: docker-ce
        state: present
    - name: Install docker-compose
      apt:
        name: docker-compose
        state: present

    - name: Add graphics drivers PPA
      apt_repository:
        repo: ppa:graphics-drivers/ppa
        update_cache: yes
        state: present

    - name: Install nvidia-drivers
      apt:
        name: nvidia-driver-440
        autoremove: yes
        state: present

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Reboot
      reboot:
      when:
        reboot_required_file.stat.exists

    - name: Configure docker to store images in /scratch
      copy:
        src: config-files/docker-daemon.json
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: 0644

    - name: Install nvidia-docker key
      apt_key:
        url: https://nvidia.github.io/nvidia-docker/gpgkey
        state: present
    - name: Add nvidia-docker apt repository
      get_url:
        url: https://nvidia.github.io/nvidia-docker/ubuntu20.04/nvidia-docker.list
        dest: /etc/apt/sources.list.d/nvidia-docker.list
        mode: 0644
        owner: root
        group: root
    - name: Install nvidia-docker runtime
      apt:
        name: nvidia-container-toolkit
        update_cache: yes
    - name: Restart the docker service
      service:
        name: docker
        state: restarted

    - name: Add a Jenkins user
      user:
        name: jenkins
        shell: /bin/bash
        groups: docker
        state: present
        create_home: yes
    - name: Add public ssh key for Jenkins access
      authorized_key:
        exclusive: yes
        key: '{{ item }}'
        user: jenkins
        state: present
      with_file:
        - public_keys/jenkins.pub

    - name: Add public ssh key for swails access
      authorized_key:
        exclusive: yes
        key: '{{ item }}'
        user: swails
        state: present
      with_file:
        - public_keys/id_ed25519_node_monitor.pub

    - name: Create Jenkins workspaces for CPU and CUDA agents
      file:
        state: directory
        path: '/home/jenkins/{{ item }}'
        owner: jenkins
        group: jenkins
        mode: 0755
      loop:
        - jenkins-cpu
        - jenkins-gpu

    - name: Create the compiler directories
      file:
        state: directory
        path: '/opt/'
        owner: root
        group: root
        mode: 0755

    - name: Set passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Untar the compiler tarballs
      unarchive:
        remote_src: no
        src: '/opt/{{ item }}-compilers.tgz'
        dest: '/opt/'
        owner: root
      loop:
        - pgi
        - intel
